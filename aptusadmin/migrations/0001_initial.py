# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2021-06-18 14:46
from __future__ import unicode_literals

import aptusadmin.utils
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='RightsSupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('access_to_admin_console', "Accéder à la console d'administration"),),
                'managed': False,
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('must_change_pwd', models.BooleanField(default=True)),
                ('tmp_pwd', models.CharField(blank=True, default='', max_length=10, verbose_name='Mot de passe temporaire')),
                ('email_is_valid', models.BooleanField(default=False)),
                ('token_valid', models.BooleanField(default=False)),
                ('old_passwords', models.CharField(blank=True, default='', max_length=255, verbose_name='Anciens mots de passe')),
                ('last_password_change_date', models.DateTimeField(blank=True, null=True, verbose_name='Dernière date de changement de mot de pass')),
                ('session', models.CharField(blank=True, default='', max_length=300, verbose_name='Session')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='user/avatar', verbose_name='Avatar')),
                ('google_account', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Compte Google')),
                ('microsoft_account', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Compte Microsoft')),
            ],
            options={
                'verbose_name_plural': 'Utilisateurs',
                'ordering': ['-last_name', '-first_name'],
                'default_permissions': ('add', 'change', 'delete', 'view', 'viewlist', 'importpermission', 'exportpermission'),
            },
            managers=[
                ('myapps_manager', aptusadmin.utils.CustomUserManager()),
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categorie', models.TextField(default='')),
                ('subject', models.TextField(verbose_name='Sujet')),
                ('created_at', models.DateTimeField(verbose_name='Date et heure de création')),
                ('link', models.CharField(blank=True, default='', max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='attachments')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Backup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_mode', models.CharField(choices=[('MANUAL', 'Manuel'), ('SCHEDULED', 'Programmé'), ('IMPORTED', 'Importé')], default='MANUAL', max_length=10, verbose_name='Mode de création')),
                ('creation_date', models.DateTimeField(verbose_name='Date de création')),
                ('file', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name_plural': 'Sauvegardes',
                'ordering': ['-creation_date'],
                'default_permissions': ('add', 'delete', 'viewlist'),
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('', '------')], max_length=20, verbose_name='Choix')),
                ('key', models.CharField(max_length=40, verbose_name='Clé')),
                ('value', models.CharField(max_length=40, verbose_name='Valeur')),
                ('description', models.CharField(blank=True, default='', max_length=300, verbose_name='Description')),
            ],
            options={
                'ordering': ['name', 'value'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Groupes',
                'default_permissions': ('add', 'change', 'delete', 'view', 'viewlist', 'managepermissions'),
            },
            bases=('auth.group',),
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=25, verbose_name='Label')),
                ('slug', models.CharField(blank=True, max_length=256, verbose_name='Slug')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('color', models.CharField(default='#555555', max_length=25, verbose_name='Color')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Content type')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='aptusadmin.Label', verbose_name='Parent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labels',
                'ordering': ('slug',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=256, verbose_name='Sujet')),
                ('content', models.TextField()),
                ('date_reception', models.DateTimeField(verbose_name='Date de réception')),
                ('statut', models.BooleanField(default=False, verbose_name='Lu')),
                ('notified_by_mail', models.BooleanField(default=False)),
                ('sender', models.ForeignKey(blank=True, default=1, on_delete=django.db.models.deletion.PROTECT, related_name='sender', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Boite de reception',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
            ],
            options={
                'ordering': ['id'],
                'proxy': True,
                'default_permissions': (),
                'indexes': [],
            },
            bases=('auth.permission',),
            managers=[
                ('objects', django.contrib.auth.models.PermissionManager()),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='choice',
            unique_together=set([('name', 'key')]),
        ),
        migrations.AddField(
            model_name='attachment',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aptusadmin.Message'),
        ),
        migrations.AddField(
            model_name='alert',
            name='groupe',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='aptusadmin.CustomGroup'),
        ),
        migrations.AddField(
            model_name='alert',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
